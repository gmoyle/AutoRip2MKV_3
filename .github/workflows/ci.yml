name: CI/CD Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch: # Allow manual triggering

env:
  DOTNET_VERSION: '6.0.x'
  SOLUTION_PATH: 'AutoRip2MKV_3.sln'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_PATH }}
      
    - name: Build solution
      run: dotnet build ${{ env.SOLUTION_PATH }} --no-restore --configuration Release
      
    - name: Run tests
      run: dotnet test ${{ env.SOLUTION_PATH }} --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          **/TestResults/**/*
          ./coverage/**/*
          
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      if: always()
      with:
        directory: ./coverage
        fail_ci_if_error: false
        
  build-artifacts:
    name: Build Release Artifacts
    runs-on: windows-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_PATH }}
      
    - name: Publish application
      run: |
        dotnet publish AutoRip2MKV/AutoRip2MKV.csproj `
          --configuration Release `
          --framework net6.0-windows `
          --output ./publish/AutoRip2MKV `
          --self-contained true `
          --runtime win-x64 `
          -p:PublishSingleFile=true `
          -p:IncludeNativeLibrariesForSelfExtract=true
          
    - name: Create release package
      run: |
        Compress-Archive -Path ./publish/AutoRip2MKV/* -DestinationPath ./AutoRip2MKV-Release.zip
        
    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: AutoRip2MKV-Release
        path: |
          ./AutoRip2MKV-Release.zip
          ./publish/AutoRip2MKV/**
        retention-days: 30
        
  release:
    name: Create GitHub Release
    runs-on: windows-latest
    needs: build-artifacts
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./AutoRip2MKV-Release.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security-scan:
    name: Security Scan
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_PATH }}
      
    - name: Run security audit
      run: dotnet list package --vulnerable --include-transitive
